- provide :title, @paper.title
- provide :description, @paper.abstract
- provide :meta do
  / Highwire Press metadata for Google Scholar
  meta name="citation_title" content=(@paper.title)
  - @authors.each do |author|
    meta name="citation_author" content=(author.surname_first)
  meta name="citation_publication_date" content=(@paper.pubdate.strftime("%Y/%m/%d"))
  meta name="citation_pdf_url" content=(@paper.pdf_url)
  meta name="citation_arxiv_id" content=(@paper.uid)

  / Metadata for Twitter summary cards, as described in detail
  / at https://dev.twitter.com/docs/cards/types/summary-card.
  meta name="twitter:card" content="summary"
  meta name="twitter:site" content="@scirate3"
  / Might be nice to also link to lead author on Twitter?
  meta name="twitter:title" content=(@paper.title[0...70])
  meta name="twitter:description" content=(@paper.abstract[0...200])
  / Might also be nice to put the psi logo here.
  / meta name="twitter:image" content=""

#paperPage.container
  .paper.row
    .col-md-12
      - cache [:paper_title, @paper] do
        .row.title-row.tex2jax
          .col-md-9
            h1.title= @paper.title
          .col-md-3
            div.scite-toggle> data-paper-uid=(@paper.uid)
              button.btn.unscite.btn-success title="Unscite this paper"
                | Scited

              button.btn.btn-default.scite title="Scite this paper if you find it interesting"
                | Scite!

              .scites-count
                a href="/arxiv/#{@paper.uid}/scites" title="Number of Scites"
                  button.btn.btn-default.count= @paper.scites_count

            div.bibtex>
              a.btn.btn-default title="Get BibTeX citation"
                i.fa.fa-bookmark-o
              .card.hidden
                textarea.bibtex= @paper.to_bibtex
                button#copyButton.btn.btn-default Copy Citation

            a.paper-download.btn.btn-success href=(@paper.pdf_url) title="Download PDF" PDF
            a.paper-download.btn.btn-info.html href=(@paper.html_url) title="View HTML on Arxiv-Vanity" HTML
      hr

      - cache [:paper_main, @paper] do
        .row
          .col-md-9
            ul.authors
              - @authors.each do |author|
                li>
                  = author_link_to(author, @paper) + (author != @authors[-1] ? ',' : '')
            .abstract.tex2jax
              = @paper.abstract
            .dates
              | Submitted #{@paper.submit_date.to_date.to_formatted_s(:rfc822)} to
              strong<= @feeds[0].fullname
              |  [#{link_to @feeds[0].uid, @feeds[0]}]
              br
              | Published #{@paper.pubdate.to_date.to_formatted_s(:rfc822)}
              - if @paper.updated?
                br
                |  Updated #{@paper.update_date.to_date.to_formatted_s(:rfc822)}
            - if @paper.categories.length > 1
              .categories
                | Subjects:
                - @feeds.each do |feed|
                  a< href="/arxiv/#{feed.uid}" = feed.uid
            - [:author_comments, :msc_class, :report_no, :journal_ref, :doi, :proxy].each do |field|
              - unless @paper.send(field).nil?
                = field.to_s.gsub('_', ' ').capitalize
                | : #{@paper.send(field)}
                br
            = link_to @paper.abs_url, @paper.abs_url
            br
            = link_to @paper.pdf_url, @paper.pdf_url
            br
              = link_to @paper.html_url, @paper.html_url
              - if @paper.scites_count > 0
                .scites
                  strong
                    | Scited by:
                  - @sciters.each_with_index do |user, i|
                    a< href="/#{user.username}" = user.fullname
                    - if i != @paper.scites_count-1
                      | ,

        a.share-button.twitter> data-title=(@paper.title) data-url="https://scirate.com/arxiv/#{@paper.uid}"
        a.share-button.google> data-title=(@paper.title) data-url="https://scirate.com/arxiv/#{@paper.uid}"
        a.share-button.facebook> data-title=(@paper.title) data-url="https://scirate.com/arxiv/#{@paper.uid}"

        .row.arxivwiki
          .col-md-9
            br
            | View this paper on the arXiv.wiki:&nbsp;
            br
            = link_to @paper.wiki_url, @paper.wiki_url
      .comments
        a name="comments"
        h4= pluralize(@comments.size, "comment")
        - if flash[:comment]
          div class="alert alert-#{flash[:comment][:status]}"
            button.close data-dismiss="alert" type="button"
            = raw flash[:comment][:raw]
            = flash[:comment][:content]
        .comment-list
          - cache [:paper_comments, @comments, current_user]
            = render @comments

          - if current_user && current_user.can_moderate?
            - @deleted_comments = Comment.where(paper_uid: @paper.uid, deleted: true).includes(:last_change)
            - if @deleted_comments.length > 0
              h4= status_warning + ' ' + pluralize(@deleted_comments.length, "deleted comment")
              = render partial: "comments/deleted_comment", collection: @deleted_comments

      .comment-form
        - if signed_in?
            - if not(@paper.locked)
                = render 'comment_form'
            - else
                = "Comments on this paper have been locked."
        - else
          = link_to "sign in to comment", login_path

      - if Settings::JOBS_VISIBLE
        - if (not current_user) || (current_user && current_user.show_jobs?)
          hr

          div id="jobs-horizontal"
            div id="job-sidebar"
              = javascript_include_tag "jobs-Sidebar.js"
          javascript:
            const initData =
              { "queryString": document.location.href
              , "jwtToken": "#{@token}"
              , "graphqlUrl": "#{Settings::GRAPHQL_URL}"
              };
            Elm.SciRate.Views.Sidebar.init(
              { node: document.getElementById("job-sidebar")
              , flags: initData
              });

