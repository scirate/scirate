- if @feed
  - title = @feed.fullname
- else
  - title = signed_in? ? "Home feed" : "Top arXiv papers"

- provide :title, title

.container#feed-page
  .row
    .col-md-2.feedbar
      ul.nav.nav-list.tree-sidebar
        = cache [:my_feeds, current_user, params.except(:feed, :page, :controller, :action)] do
          - if signed_in?
            li.feed-folder.my-feeds
              label.nav-header
                i.fa.fa-chevron-down
                = link_to("My feeds", feeds_path)
              ul.nav.nav-list.tree
                - if current_user.feeds.count == 0
                  li.leaf
                    = link_to("Add feeds", feeds_path)
                - else
                  - current_user.feeds.order(:fullname).each do |feed|
                    li.leaf title=(feed.uid)
                      = link_to(feed.fullname, feed_path(feed, params.except(:feed, :page, :controller, :action)))

        = cache [:sidebar, params] do
          li.source-heading arXiv.org
          - Feed.in_order(Settings::ARXIV_FOLDERS).each do |parent|
            li.feed-folder class=(@feed == parent ? 'active' : '') title=(parent.uid)
              - expanded = (@feed == parent || (@feed && @feed.parent == parent))
              label.nav-header
                i class=(expanded ? 'fa fa-chevron-down' : 'fa fa-chevron-right') class=(parent.children.length > 0 ? '' : 'transparent')
                = link_to parent.fullname.gsub("High Energy Physics", "HEP"), feed_path(parent, params.except(:feed, :page, :controller, :action))
              ul.nav.nav-list.tree style=(expanded ? '' : 'display: none;')
                - parent.children.each do |feed|
                  li.leaf class=(@feed == feed ? 'active' : '') title=(feed.uid)
                    = link_to(feed.fullname, feed_path(feed, params.except(:feed, :page, :controller, :action)))
      div.hidden-md.hidden-lg.hidden-xl.hidden-xxl
        = render 'feeds/next_prev_links'

    .col-md-10.feed-center
      - cache [:feed, @feed, current_user] do
        header.feed-header class=(@feed ? '' : 'home')
          .row
            - if @feed
              .col-md-10
                h1
                  = @feed.fullname
                  |  (#{@feed.uid})
              .col-md-2
                = render 'feeds/subscribe', feed: @feed, subscribed: signed_in? && @feed.subscriptions.exists?(user_id: current_user.id)
            - else
              .col-md-10
                h1= title
                - if signed_in?
                  = link_to "edit subscriptions", feeds_path, class: 'view-subs'
                - else
                  = link_to "sign in to customize", login_path, class: 'view-subs'
      .row
        .col-md-9
          .paperlist
            ul.papers
              - if @feed.nil? && signed_in? && !current_user.has_subscriptions?
                p.description
                  | New papers from all your subscribed feeds will appear here. You can find feeds to subscribe to using the links on the left, or by visiting the <a href="#{feeds_path}">my feeds</a> page.
              - elsif @papers.count == 0
                  p No papers found!
              - else
                - cache [:feed_papers, @papers.map { |paper| "#{paper.uid}/#{paper.scites_count}/#{paper.comments_count}" }] do
                  = render partial: "papers/paper", collection: @papers, as: :paper
                = will_paginate @pagination, inner_window: 30

        .col-md-3.feed-rightbar
          - cache [:next_prev, current_user, @feed, @date, @range, @backdate, @since_last]
            div.hidden-xs.hidden-sm
              = render 'feeds/next_prev_links'

          - if Settings::JOBS_VISIBLE
            - if (not current_user) || (current_user && current_user.show_jobs?)
              div id="job-sidebar"
              = javascript_include_tag "jobs-Sidebar.js"
              javascript:
                const initData =
                  { "queryString": document.location.href
                  , "jwtToken": "#{@token}"
                  , "graphqlUrl": "#{Settings::GRAPHQL_URL}"
                  };
                Elm.SciRate.Views.Sidebar.init(
                  { node: document.getElementById("job-sidebar")
                  , flags: initData
                  });

          - cache [:recent_comments, @recent_comments, current_user && current_user.can_moderate?] do
            - unless @recent_comments.length == 0
              h3
                - if @feed.nil?
                  a href=(comments_path) Recent comments
                - else
                  a href=(feed_comments_path(@feed)) Recent comments
              = render :partial => "comments/abbr_comment", :collection => @recent_comments

